{
  "contractName": "CloneFactory",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/konrad/Desktop/rumble/fin/local-setup/keep-ecdsa/solidity/contracts/CloneFactory.sol\":\"CloneFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/konrad/Desktop/rumble/fin/local-setup/keep-ecdsa/solidity/contracts/CloneFactory.sol\":{\"keccak256\":\"0xc474d7a9994b783d28962cf9b22fa015563d2a94461af48b7e559439caf53ef1\",\"urls\":[\"bzz-raw://8fe135f81f3f4ab4e13c5a86c2a0853309d91918159b3533c0c483c889035243\",\"dweb:/ipfs/QmVg1wsXggXH4chee9HuwuwdUjaj75WHBrv17ESCjwAfJh\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72315820f690fd6f2fd5fc8748ba5627c200bdd106521578fa5eb7644b9ea5204b40463464736f6c63430005110032",
  "deployedBytecode": "0x6080604052600080fdfea265627a7a72315820f690fd6f2fd5fc8748ba5627c200bdd106521578fa5eb7644b9ea5204b40463464736f6c63430005110032",
  "sourceMap": "1580:1431:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1580:1431:8;;;;;;;",
  "deployedSourceMap": "1580:1431:8:-;;;;;",
  "source": "pragma solidity 0.5.17;\n\n/*\nThe MIT License (MIT)\nCopyright (c) 2018 Murray Software, LLC.\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n//solhint-disable max-line-length\n//solhint-disable no-inline-assembly\n\n// Implementation of [EIP-1167] based on [clone-factory]\n// source code.\n//\n// EIP 1167: https://eips.ethereum.org/EIPS/eip-1167\n// clone-factory: https://github.com/optionality/clone-factory\n// Modified to use ^0.5.10; instead of ^0.4.23 solidity version\n//\n// TODO: This code is copied from tbtc repo. We should consider pulling the code\n// and tests to a common repo.\n/* solium-disable */\n\ncontract CloneFactory {\n    function createClone(address target) internal returns (address result) {\n        bytes20 targetBytes = bytes20(target);\n        assembly {\n            let clone := mload(0x40)\n            mstore(\n                clone,\n                0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n            )\n            mstore(add(clone, 0x14), targetBytes)\n            mstore(\n                add(clone, 0x28),\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n            )\n            result := create(0, clone, 0x37)\n        }\n    }\n\n    function isClone(address target, address query)\n        internal\n        view\n        returns (bool result)\n    {\n        bytes20 targetBytes = bytes20(target);\n        assembly {\n            let clone := mload(0x40)\n            mstore(\n                clone,\n                0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000\n            )\n            mstore(add(clone, 0xa), targetBytes)\n            mstore(\n                add(clone, 0x1e),\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n            )\n\n            let other := add(clone, 0x40)\n            extcodecopy(query, other, 0, 0x2d)\n            result := and(\n                eq(mload(clone), mload(other)),\n                eq(mload(add(clone, 0xd)), mload(add(other, 0xd)))\n            )\n        }\n    }\n}\n",
  "sourcePath": "/Users/konrad/Desktop/rumble/fin/local-setup/keep-ecdsa/solidity/contracts/CloneFactory.sol",
  "ast": {
    "absolutePath": "/Users/konrad/Desktop/rumble/fin/local-setup/keep-ecdsa/solidity/contracts/CloneFactory.sol",
    "exportedSymbols": {
      "CloneFactory": [
        3456
      ]
    },
    "id": 3457,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3423,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3456,
        "linearizedBaseContracts": [
          3456
        ],
        "name": "CloneFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3437,
              "nodeType": "Block",
              "src": "1679:506:8",
              "statements": [
                {
                  "assignments": [
                    3431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3431,
                      "name": "targetBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 3437,
                      "src": "1689:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 3430,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1689:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3435,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3433,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3425,
                        "src": "1719:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1711:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": "bytes20"
                    },
                    "id": 3434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1689:37:8"
                },
                {
                  "externalReferences": [
                    {
                      "targetBytes": {
                        "declaration": 3431,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1961:11:8",
                        "valueSize": 1
                      }
                    },
                    {
                      "result": {
                        "declaration": 3428,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2137:6:8",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 3436,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let clone := mload(0x40)\n    mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n    mstore(add(clone, 0x14), targetBytes)\n    mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n    result := create(0, clone, 0x37)\n}",
                  "src": "1736:443:8"
                }
              ]
            },
            "documentation": null,
            "id": 3438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createClone",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3425,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "1629:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1628:16:8"
            },
            "returnParameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3428,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "1663:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1662:16:8"
            },
            "scope": 3456,
            "src": "1608:577:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3454,
              "nodeType": "Block",
              "src": "2303:706:8",
              "statements": [
                {
                  "assignments": [
                    3448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3448,
                      "name": "targetBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 3454,
                      "src": "2313:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 3447,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "2313:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3452,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3450,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3440,
                        "src": "2343:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2335:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": "bytes20"
                    },
                    "id": 3451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2335:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2313:37:8"
                },
                {
                  "externalReferences": [
                    {
                      "query": {
                        "declaration": 3442,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2815:5:8",
                        "valueSize": 1
                      }
                    },
                    {
                      "targetBytes": {
                        "declaration": 3448,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2584:11:8",
                        "valueSize": 1
                      }
                    },
                    {
                      "result": {
                        "declaration": 3445,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2850:6:8",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 3453,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let clone := mload(0x40)\n    mstore(clone, 0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000)\n    mstore(add(clone, 0xa), targetBytes)\n    mstore(add(clone, 0x1e), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n    let other := add(clone, 0x40)\n    extcodecopy(query, other, 0, 0x2d)\n    result := and(eq(mload(clone), mload(other)), eq(mload(add(clone, 0xd)), mload(add(other, 0xd))))\n}",
                  "src": "2360:643:8"
                }
              ]
            },
            "documentation": null,
            "id": 3455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isClone",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3440,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 3455,
                  "src": "2208:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3442,
                  "name": "query",
                  "nodeType": "VariableDeclaration",
                  "scope": 3455,
                  "src": "2224:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2207:31:8"
            },
            "returnParameters": {
              "id": 3446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3445,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 3455,
                  "src": "2286:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3444,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2286:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2285:13:8"
            },
            "scope": 3456,
            "src": "2191:818:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 3457,
        "src": "1580:1431:8"
      }
    ],
    "src": "0:3012:8"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/konrad/Desktop/rumble/fin/local-setup/keep-ecdsa/solidity/contracts/CloneFactory.sol",
      "exportedSymbols": {
        "CloneFactory": [
          3456
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".17"
          ]
        },
        "id": 3423,
        "name": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3456
          ],
          "name": "CloneFactory",
          "scope": 3457
        },
        "children": [
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createClone",
              "scope": 3456,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "target",
                      "scope": 3438,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3424,
                        "name": "ElementaryTypeName",
                        "src": "1629:7:8"
                      }
                    ],
                    "id": 3425,
                    "name": "VariableDeclaration",
                    "src": "1629:14:8"
                  }
                ],
                "id": 3426,
                "name": "ParameterList",
                "src": "1628:16:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "result",
                      "scope": 3438,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3427,
                        "name": "ElementaryTypeName",
                        "src": "1663:7:8"
                      }
                    ],
                    "id": 3428,
                    "name": "VariableDeclaration",
                    "src": "1663:14:8"
                  }
                ],
                "id": 3429,
                "name": "ParameterList",
                "src": "1662:16:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        3431
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "targetBytes",
                          "scope": 3437,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes20",
                              "type": "bytes20"
                            },
                            "id": 3430,
                            "name": "ElementaryTypeName",
                            "src": "1689:7:8"
                          }
                        ],
                        "id": 3431,
                        "name": "VariableDeclaration",
                        "src": "1689:19:8"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(bytes20)",
                              "value": "bytes20"
                            },
                            "id": 3432,
                            "name": "ElementaryTypeNameExpression",
                            "src": "1711:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3425,
                              "type": "address",
                              "value": "target"
                            },
                            "id": 3433,
                            "name": "Identifier",
                            "src": "1719:6:8"
                          }
                        ],
                        "id": 3434,
                        "name": "FunctionCall",
                        "src": "1711:15:8"
                      }
                    ],
                    "id": 3435,
                    "name": "VariableDeclarationStatement",
                    "src": "1689:37:8"
                  },
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "targetBytes": {
                            "declaration": 3431,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1961:11:8",
                            "valueSize": 1
                          }
                        },
                        {
                          "result": {
                            "declaration": 3428,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2137:6:8",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    let clone := mload(0x40)\n    mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n    mstore(add(clone, 0x14), targetBytes)\n    mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n    result := create(0, clone, 0x37)\n}"
                    },
                    "children": [],
                    "id": 3436,
                    "name": "InlineAssembly",
                    "src": "1736:443:8"
                  }
                ],
                "id": 3437,
                "name": "Block",
                "src": "1679:506:8"
              }
            ],
            "id": 3438,
            "name": "FunctionDefinition",
            "src": "1608:577:8"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isClone",
              "scope": 3456,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "target",
                      "scope": 3455,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3439,
                        "name": "ElementaryTypeName",
                        "src": "2208:7:8"
                      }
                    ],
                    "id": 3440,
                    "name": "VariableDeclaration",
                    "src": "2208:14:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "query",
                      "scope": 3455,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3441,
                        "name": "ElementaryTypeName",
                        "src": "2224:7:8"
                      }
                    ],
                    "id": 3442,
                    "name": "VariableDeclaration",
                    "src": "2224:13:8"
                  }
                ],
                "id": 3443,
                "name": "ParameterList",
                "src": "2207:31:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "result",
                      "scope": 3455,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3444,
                        "name": "ElementaryTypeName",
                        "src": "2286:4:8"
                      }
                    ],
                    "id": 3445,
                    "name": "VariableDeclaration",
                    "src": "2286:11:8"
                  }
                ],
                "id": 3446,
                "name": "ParameterList",
                "src": "2285:13:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        3448
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "targetBytes",
                          "scope": 3454,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes20",
                              "type": "bytes20"
                            },
                            "id": 3447,
                            "name": "ElementaryTypeName",
                            "src": "2313:7:8"
                          }
                        ],
                        "id": 3448,
                        "name": "VariableDeclaration",
                        "src": "2313:19:8"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(bytes20)",
                              "value": "bytes20"
                            },
                            "id": 3449,
                            "name": "ElementaryTypeNameExpression",
                            "src": "2335:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3440,
                              "type": "address",
                              "value": "target"
                            },
                            "id": 3450,
                            "name": "Identifier",
                            "src": "2343:6:8"
                          }
                        ],
                        "id": 3451,
                        "name": "FunctionCall",
                        "src": "2335:15:8"
                      }
                    ],
                    "id": 3452,
                    "name": "VariableDeclarationStatement",
                    "src": "2313:37:8"
                  },
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "query": {
                            "declaration": 3442,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2815:5:8",
                            "valueSize": 1
                          }
                        },
                        {
                          "targetBytes": {
                            "declaration": 3448,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2584:11:8",
                            "valueSize": 1
                          }
                        },
                        {
                          "result": {
                            "declaration": 3445,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2850:6:8",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    let clone := mload(0x40)\n    mstore(clone, 0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000)\n    mstore(add(clone, 0xa), targetBytes)\n    mstore(add(clone, 0x1e), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n    let other := add(clone, 0x40)\n    extcodecopy(query, other, 0, 0x2d)\n    result := and(eq(mload(clone), mload(other)), eq(mload(add(clone, 0xd)), mload(add(other, 0xd))))\n}"
                    },
                    "children": [],
                    "id": 3453,
                    "name": "InlineAssembly",
                    "src": "2360:643:8"
                  }
                ],
                "id": 3454,
                "name": "Block",
                "src": "2303:706:8"
              }
            ],
            "id": 3455,
            "name": "FunctionDefinition",
            "src": "2191:818:8"
          }
        ],
        "id": 3456,
        "name": "ContractDefinition",
        "src": "1580:1431:8"
      }
    ],
    "id": 3457,
    "name": "SourceUnit",
    "src": "0:3012:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-30T08:59:51.058Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}